#!/usr/bin/env python
#
# This crude script extracts RNDR's module-level code documentation and
# recycles it to produce segments of the user documentation and homepage
# content. 
# 
#
# TODO:
# Investigate what functionality the Sphinx document generator offers in
# accomplishing this, if any. 

import os
import rndr

ROOT = os.path.dirname(
            os.path.dirname(
                os.path.abspath( __file__ ) 
       )
) + '/'

DOCS_DIR     = ROOT + 'docs/'
HOMEPAGE_DIR = ROOT + 'homepage/'
TPL_DIR      = ROOT + 'scripts/templates/'

gen_rndr = lambda name : rndr.RNDR( open( TPL_DIR + name  ) )

dr = gen_rndr( 'index.rndr.rst'  )
sr = gen_rndr( 'index.rndr.html' )

output = {
        DOCS_DIR + 'usage.rst': rndr.__usage__[1:],
        DOCS_DIR + 'configuration.rst': rndr.__config__[1:],
        DOCS_DIR + 'index.rst': dr(),
        HOMEPAGE_DIR + 'index.html': sr(),
        ROOT + 'README.rst': rndr.__doc__
}

for i in output:
    with open( i , 'w' ) as f:
        print "Creating: %s." % i
        f.write( output[i] )
        f.close()

print "Building documentation."
os.system( "cd %s; make html" % DOCS_DIR )
